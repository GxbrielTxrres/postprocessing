/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: D444rkGhost (https://sketchfab.com/propersiaclan)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/trippy-thinker-5f56f4c02624427f8c9e6d64344bd17c
title: Trippy Thinker
*/
import { DoubleSide } from "three";
import React, { useRef } from "react";
import {
	PerspectiveCamera,
	useGLTF,
	OrbitControls,
	MeshTransmissionMaterial,
} from "@react-three/drei";
import gsap from "gsap";
import { useFrame } from "@react-three/fiber";

export function Model(props) {
	const camera = useRef();
	const sphereRef = useRef();

	function openMenu() {
		gsap.to(camera.current.position, {
			x: 5.21,
			y: 0,
			z: -25,
			duration: 5.5,
		});
	}

	useFrame((state) => {
		sphereRef.current.rotation.x = Math.cos(state.clock.elapsedTime * 0.25);
		sphereRef.current.rotation.z = Math.sin(state.clock.elapsedTime * 0.25);
	});

	if (props.open) {
		openMenu();
	}

	const { nodes, materials } = useGLTF("/trippy_thinker.glb");
	return (
		<group {...props} dispose={null}>
			<mesh ref={sphereRef} position={[2.5, 10, -2]}>
				<sphereGeometry args={[2.5, 32, 16]} />
				<MeshTransmissionMaterial
					transparent={true}
					color="#ff00ff"
					samples={4}
					distortion={25}
					distortionSpeed={0.2}
					distortionScale={2}
					resolution={128}
					chromaticAberration={2}
					temporalDistortion={0.075}
					ior={1.1}
					side={DoubleSide}
					reflectivity={0.1}
					clearcoat={0.1}
					specularIntensity={10}
					specularColor="#ff0000"
					sheen={0.1}
					sheenColor="yellow"
					thickness={0.5}
				/>
			</mesh>
			<OrbitControls
				onEnd={() => {
					console.log(camera.current.position);
				}}
				target={[2, 10, 0]}
			/>
			<PerspectiveCamera
				makeDefault
				ref={camera}
				position={[4.76, 11.16, -2.65]}
			/>
			<group rotation={[-Math.PI / 2, 0, 0]}>
				<group rotation={[Math.PI / 2, 0, 0]}>
					<group
						position={[1.33, 0.57, -0.25]}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={[0.08, 0.08, 0.1]}
					>
						<mesh
							castShadow
							receiveShadow
							geometry={
								nodes["Cylinder001_Material_#26_0"].geometry
							}
							material={materials.Material_26}
						/>
					</group>
					<group
						position={[1.33, 4.13, -0.25]}
						rotation={[Math.PI, 0, 0.05]}
						scale={6.8}
					>
						<mesh
							castShadow
							receiveShadow
							geometry={nodes["Group1_Material_#27_0"].geometry}
							material={materials.Material_27}
						/>
					</group>
				</group>
			</group>
		</group>
	);
}

useGLTF.preload("/trippy_thinker.glb");
